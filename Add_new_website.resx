<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAABAAAAAWAAAAFgAA
        ABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAQAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMQAA
        AEIAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAA
        AEMAAABDAAAAQgAAADEAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABYAi0zzAItK/wCJR/8AiUf/AIlH/wCJR/8AiUf/AIlH/wCJR/8AiUf/AIlH/wCJR/8AiUf/AIlH/wCJ
        R/8AiUf/AIlH/wCJR/8Ai0r/AItM8wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFgCLSv8AzZb/AMeN/wDFif8AxYn/AMWK/wDGi/8Ax4z/AMeM/wDHjP8Ax4v/AMaL/wDF
        if8AxYn/AMWJ/wDFif8AxYn/AMeN/wDNlv8Ai0r/AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWAIlH/wDEjP//////////////////////////////////////////////
        ////////////////////////////////////////AMSM/wCJR/8AAAAWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAiUf/AL+G/////////////////7rcyv8AhkL/AH43/wB/
        Of8AgDj/AHwx/0Oqe/////////39///8/P///Pz///39//////8Av4b/AIlH/wAAABYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgCJR/8AvYX////////+//+z2cb/AIE6/wC+
        gv8AzJT/AM2W/wCeXP9SsIX///////76/P/6+fn/+vn6//r5+v/9+fv//////wC9hf8AiUf/AAAAFgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAIlH/wC5g////f////7//waN
        Tv8AuH3/AMqT/wDKk/8Anl7/X7KK///////++fv/+Pb3//v4+f//+/7///v////4+////P//ALmD/wCJ
        R/8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAikf/ALeC///6
        ///o7On/AIhB/wDLk/8Axo//AMeR/wCcXP9esYn///3///32+P/89fj///r//0ysgP8Aeiz///r////6
        //8At4L/AIpH/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgCK
        R/8AtYH///j+///6//8Agjv/AMuU/wC/jP8AwIz/AMKO/wCaWf9TroL///v////6//9SroL/AJ5b/wCA
        N///+v////j9/wC1gf8Aikf/AAAAFgAAAAQAAAANAAAAFQAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAnAI1I/wCzgP//9/z///f8/waQUP8Aun//AMKN/wC7if8AvIr/AL2L/wCcWf9cr4f/XK+H/wCb
        Xf8Aw47/AIE5///3/f//9fr/ALJ//wCKSP8AAAAWAAAADQAAACsAAAA/AAAAQwAAAEMAAABDAAAAQwAA
        AEMAAABDAAAAQwAAAEgAkkn/ALiE///9/////P//rtvK/wCXUf8A0pf/AMGM/wC9iv8AvIn/ALyL/wCg
        X/8AoF//ALmJ/wDDj/8AgTn///T6///y9/8AsH7/AIpI/wAAABYAAAAViFFDxJVXSf+TVUf/k1RG/5NU
        Rv+TVEb/k1RG/5NURv+UVEb/mFJG/55PRP+bSz//kUc5/45HOP+VSTz/nktA/6JLQf+kS0H/qUtC/2l0
        XP8Atob/ALOE/wCyhP8AsYP/AL+M/wCBOf//8Pf//+/0/wCufP8Aikj/AAAAFgAAABaVV0n/2J99/9KW
        dP/Qk3D/0JNw/9GUcf/RlHL/0ZVz/9KVc//SlXP/05Ry/9KScP/QkW7/z5Fu/9CRbv/SkW//0pFw/9WV
        c//enHv/qUxC/wCyg/8ArYD/AKx//wCrf/8AvYv/AII6///u8///7fH/AKp7/wCLSP8AAAAWAAAAFpNV
        R//QlHL/////////////////////////////////////////////////////////////////////////
        /////////////9KScf+kTEL/ALWF/wCofP8Ap3z/AKV8/wDEj/8Agjr//+vx///q7/8AqHn/AItJ/wAA
        ABYAAAAWk1VH/8qNa////////v/////////ezsr/j09B/4lGN/+LRzj/i0c3/4hAL/+xhHr///////3+
        /f/8/fz//P38//3+/v//////zYxq/6NNQv8AsYL/AKN5/wCieP8AoXj/AMOQ/wCCOv/76O7/++fr/wCm
        eP8Ai0n/AAAAFgAAABaTVUf/yIto//7////9////28rG/45JOf/Jjm//1559/9mgff+paVL/to2E////
        ///6+/z/+Pn5//n5+v/5+vr/+fr7//7////KiWf/o01C/wCheP8Am3X/AJp0/wCZdP8AwY7/AII6//jk
        6v/44+j/AKN3/wCMSf8AAAAWAAAAFpRVR//Fh2b//P////3///+YW03/w4hr/9WdfP/VnX3/qGpW/7iS
        i///////+Pv7//b39//3+fn/+v7+//r+///4+/z/+////8eGZf+iTEL/ANeb/wDQl/8Az5b/AM6W/wDP
        lv8AgTn/8uLl//Th5f8AoXX/AIxJ/wAAABYAAAAWlFZH/8OFZP/7////7urp/4pGNv/Wnnz/0Jh6/9Ka
        ev+maVT/uJKJ//3////2+Pj/9vf4//v///+0in//hTwq//r+///6////xIRj/59NQv8Ai0H/AIU9/wCE
        PP8Agzz/AIM6/0aleP/s3eD/897i/wCfdP8AjEn/AAAAFgAAABaUVkj/v4Jg//f+///5////ikY3/9ee
        ff/JkXP/ypJz/8yUdP+lZVD/tIyD//n////5////tIyC/6hoUf+ZVED/+P////f+///AgF//mkxA//vp
        8P//4ur//+Hp///g6f//4Oj/+N7k//Lc4P/83uT/AJ11/wCNSv8AAAAVAAAAFpRWSP+9gF7/9Pr8//T6
        +/+WW07/xIls/8uTdP/EjG//xY1v/8aOb/+nZ1L/tpCH/7aQh/+mZ1D/zJJx/55aRv/1/P3/9Pv9/79+
        Xf+fTkP/AKF4/wCbc/8AmnP/AJpz/wCacv8AmXH/AJlx/wCadP8Annr/AI1M/wAAAA0AAAAWlVZI/7l8
        XP/w9/j/7/Ly/9LCvf+ZVkT/1p17/8KKbv++hmn/v4dq/8WMbv+qbVj/qm1Y/8OLbP/NlHT/nVpG//H4
        +v/w+Pn/vHtc/6NQR/8Akkv/AI5K/wCNSf8AjUn/AI1J/wCNSf8AjUn/AI1K/wCOTP8AjEy0AAAABAAA
        ABaVV0j/tnla/+7y9P/q6+v/7vLy/7CHff+naFL/1p18/72Faf+5gWX/uoJm/7uDZv+7g2b/uoJm/8iQ
        cf+dW0f/7/X3/+709v+4eFr/oVNI/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFpVXSP+0d1j/6vDx/+bn5v/n6ef/6/Lx/6+Hff+oaFP/1Z19/7mBZP+zfF//tX1h/7V9
        Yf+0fGD/xo5v/55bR//s8/P/6/Lz/7V2WP+bVUj/AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWlldJ/7FzVP/o7e//5OTj/+Pj4v/m5+b/6/Hy/7CLgv+pa1f/1p59/7V+
        Yf+udlz/r3dd/611W//Plnb/nltH/+nw8f/p7/H/sXNU/5dXSf8AAAAWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaWV0n/r3FS/+Xq7P/h4eD/4ODf/+Lk4//n7e7/sImC/6lr
        V//VnX7/r3de/6hwWP+ocFj/p29W/8yUdf+eW0j/5uzu/+bs7v+vcVL/lldJ/wAAABYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpZXSf+rblD/4ufp/97e3f/f39//4+fo/62E
        ev+oaVP/1Jx7/6dwVv+fZ0//oGhQ/6BoUP+fZ07/y5Jy/59bSP/j6ev/4+nr/6tuUP+WV0n/AAAAFgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWllhK/6lsTv/f5eb/293b/93h
        4P+tgnf/q2pT/9qhfv/ZoH7/2aF//9qhgP/aooD/2qKA/9qhgP/aoH7/m1VC/9/m5v/g5+f/qWxO/5ZY
        Sv8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaXWEr/pmlL/97j
        5P/a3Nr/3eDg/4xEM/+QSzz/j0w9/45LPf+OSz3/jks9/45LPf+OSz3/jks9/45JOv+rgXj/3eHh/97k
        5f+maUv/l1hK/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFZdZ
        S/+laU3/3ufp/9vh4f/c4uP/3ujp/+Dr7P/g6+3/4Ovt/+Dr7f/g6+3/4Ovt/+Dr7f/g6+3/3+rr/97m
        5//c4uP/3ufp/6VpTf+XWUv/AAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAANmFpM/6RsUP+hZkr/oGNH/6BjR/+hZEj/oWVI/6FlSP+hZUj/oWVI/6FlSP+hZUj/oWVI/6Fl
        SP+hZEj/oWRI/6BkR/+hZkr/pGxQ/5haTP8AAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAASVWku0mFpM/5dZS/+XWUr/l1lK/5dZSv+XWUr/l1lK/5dZSv+XWUr/l1lK/5dZ
        Sv+XWUr/l1lK/5dZSv+XWUr/l1lK/5dZS/+YWkz/lVpLtAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AAAP/AAAD/wAAA/8AAAP/AAAD/wAAA/8AAAP/AAAD/wAAA/8AAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/8AAAP/AAAD/wAA
        A/8AAAP/AAAD/wAAA/8AAAP/AAAD/wAAA/8=
</value>
  </data>
</root>